format(round(1.1264, 2), nsmall = 2)
format(round(1.1234, 2), nsmall = 2)
library(DT)
# condition: if there is a RIN column in QualityAssessment.csv, prints a statement and the table, otherwise another statement.
no_RIN = FALSE
RIN=FALSE
df_QA <- read.table("./QualityAssessment.csv", header=TRUE, sep="\t")
if ("BLUE" %in% colnames(df_QA)){
RIN <- TRUE
} else {
no_RIN <- TRUE
}
df_DE <- read.table("./results/MultiQC/multiqc_data/multiqc_general_stats.txt", header=TRUE, sep="\t")
View(df_DE)
df_DE[,(cols) := round(.SD,2), .SDcols=cols]
myDf <- read.table("./results/MultiQC/multiqc_data/multiqc_general_stats.txt", header=TRUE, sep="\t")
cols <- names(mydf)
mydf[,(cols) := round(.SD,2), .SDcols=cols]
mydf
mydf <- read.table("./results/MultiQC/multiqc_data/multiqc_general_stats.txt", header=TRUE, sep="\t")
cols <- names(mydf)
mydf[,(cols) := round(.SD,2), .SDcols=cols]
mydf
View(mydf)
names(mydf)
cols <- names(mydf)
cols
mydf[,(cols) := round(.SD,2), .SDcols=cols]
is.num <- sapply(mydf, is.numeric)
mydf[is.num] <- lapply(mydf[is.num], round, 2)
View(mydf)
View(myDf)
View(mydf)
View(myDf)
View(myDf)
View(mydf)
setwd("~/Documents/RNAseq_report/r-analysis-templates/report")
library(DT)
# condition: if there is a RIN column in QualityAssessment.csv, prints a statement and the table, otherwise another statement.
no_RIN = FALSE
RIN=FALSE
df_QA <- read.table("./QualityAssessment.csv", header=TRUE, sep="\t")
if ("BLUE" %in% colnames(df_QA)){
RIN <- TRUE
} else {
no_RIN <- TRUE
}
library(DT)
df_DE <- read.table("./results/MultiQC/multiqc_data/multiqc_general_stats.txt", header=TRUE, sep="\t")
is.num <- sapply(df_DE, is.numeric)
df_DE[is.num] <- lapply(df_DE[is.num], round, 2)
columns <- c("Sample", "featureCounts_mqc.generalstats.featurecounts.percent_assigned", "featureCounts_mqc.generalstats.featurecounts.Assigned",
"STAR_mqc.generalstats.star.uniquely_mapped_percent", "Cutadapt_mqc.generalstats.cutadapt.percent_trimmed",
"FastQC_mqc.generalstats.fastqc.percent_duplicates", "FastQC_mqc.generalstats.fastqc.percent_gc",
"FastQC_mqc.generalstats.fastqc.total_sequences")
df_DE_selected = df_DE %>% select(one_of(columns))
n_rows = nrow(df_DE_selected)
pwd
getwd()
file.choose("./results/MultiQC/multiqc_data/multiqc_general_stats.txt")
